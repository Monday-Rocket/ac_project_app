name: Deploy iOS and Android App to App Store and Play Store
on:
  pull_request:
    branches:
      - master
jobs:
  # TestFlight
  release-ios:
    name: Build and release iOS app
    runs-on: macos-latest
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '3.3.9'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.2'
      - run: flutter clean
      - run: flutter pub get
      - run: echo "${{ secrets.FIREBASE_OPTIONS }}" > ./lib/firebase_options.dart
      - run: echo '${{ secrets.FIREBASE_APP_ID_FILE }}' > ./ios/firebase_app_id_file.json
      - run: echo '${{ secrets.GOOGLE_SERVICE_IOS }}' > ./ios/Runner/GoogleService-Info.plist
      - name: Flutter release build ios
        run: flutter build ios --release --no-codesign
      - name: Deploy iOS Beta to TestFlight via Fastlane
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: closed_beta
          subdirectory: ios
        env:
          ITC_TEAM_ID: '${{ secrets.ITC_TEAM_ID }}'
          APPLICATION_ID: '${{ secrets.APPLICATION_ID }}'
          BUNDLE_IDENTIFIER: '${{ secrets.BUNDLE_IDENTIFIER }}'
          EXTENSION_IDENTIFIER: '${{ secrets.EXTENSION_IDENTIFIER }}'
          DEVELOPER_PORTAL_TEAM_ID: '${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}'
          FASTLANE_APPLE_ID: '${{ secrets.FASTLANE_APPLE_EMAIL_ID }}'
          FASTLANE_PASSWORD: '${{ secrets.FASTLANE_PASSWORD }}'
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: '${{ secrets.APP_SPECIFIC_PASSWORD }}'
          MATCH_PASSWORD: '${{ secrets.MATCH_PASSWORD }}'
          GIT_AUTHORIZATION: '${{ secrets.GIT_AUTHORIZATION }}'
          PROVISIONING_PROFILE_SPECIFIER: '${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}'
          TEMP_KEYCHAIN_PASSWORD: '${{ secrets.TEMP_KEYCHAIN_PASSWORD }}'
          TEMP_KEYCHAIN_USER: '${{ secrets.TEMP_KEYCHAIN_USER }}'
  # internal test
  release-android:
    name: Build and release Android app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '12.x'
      - uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: '3.3.9'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.2'
      - name: Install Fastlane
        run: cd android && bundle install && cd ..
      - name: Install packages
        run: flutter pub get
      - run: echo '${{ secrets.SIGNING_PROPERTIES }}' > ./android/signing.properties
      - run: echo '${{ secrets.PLAY_STORE_SERVICE_ACCOUNT }}' > ./android/pc-api-5940945835938803721-498-fd0016af1dc3.json
      - run: echo '${{ secrets.ANDROID_KEYSTORE_BASE64 }}' | base64 -d > ./android/monday-key.jks
      - run: echo "${{ secrets.FIREBASE_OPTIONS }}" > ./lib/firebase_options.dart
      - run: echo '${{ secrets.GOOGLE_SERVICES_ANDROID }}' > ./android/app/google-services.json
      - name: Prebuild
        run: flutter build appbundle
      - name: Execute Fastlane command
        run: cd android && fastlane beta


#  build_android:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: '12.x'
#      - name: Download Android keystore
#        id: android_keystore
#        uses: timheuer/base64-to-file@v1.0.3
#        with:
#          fileName: key.jks
#          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
#      - name: Create key.properties
#        run: |
#          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
#          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
#          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
#          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
#
#      - uses: subosito/flutter-action@v1
#        with:
#          flutter-version: '3.3.9' # change accordingly
#          channel: 'stable'
#      - run: flutter pub get
#      - run: flutter build appbundle
#      - name: Create github artifact release # disable this to save storage
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: "build/app/outputs/bundle/release/app-release.aab"
#          token: ${{ secrets.GITHUB_TOKEN }} # this is automatically provided by github
#        commit:
#      - name: Upload app bundle artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: appbundle
#          path: build/app/outputs/bundle/release/app-release.aab
#      - name: Run Fastlane
#        uses: maierj/fastlane-action@v1.4.0
#        with:
#          lane: upload_to_google_play_store
#          subdirectory: android