def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = 1
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def signingProperties = new Properties()
def signingPropertiesFile = rootProject.file('signing.properties')
if (signingPropertiesFile.exists()) {
    signingPropertiesFile.withReader('UTF-8') {
        signingProperties.load(it)
    }
}
def _keyAlias = signingProperties.getProperty('key.alias')
def _keyPassword = signingProperties.getProperty('key.password')
def _storePassword = signingProperties.getProperty('store.password')

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion '25.1.8937393'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.mr.ac_project_app"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias _keyAlias
            keyPassword _keyPassword
            storeFile file('../monday-key.jks')
            storePassword _storePassword
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.release

            ndk.debugSymbolLevel = "FULL"
        }
    }
    namespace 'com.mr.ac_project_app'

    packagingOptions {
        dex {
            useLegacyPackaging true
        }
        jniLibs {
            useLegacyPackaging true
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    //noinspection GradleDependency,DifferentStdlibGradleVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //noinspection GradleDependency
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.activity:activity-ktx:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.4.3'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'
}

configurations.all {
    exclude group: 'com.google.android.gms', module: 'play-services-safetynet'
}